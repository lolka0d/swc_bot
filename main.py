import json
import os
import sqlite3
from aiogram import executor
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text
from aiogram.types import InputFile

from aiogram import Bot, Dispatcher, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage

from aiogram.dispatcher.filters.state import StatesGroup, State

memory = MemoryStorage()
bot = Bot(token='5396098820:AAGY_1ThI4cmrSB9wLMYsZhEUHIc01cWywU')
dp = Dispatcher(bot, storage=memory)


class Sell_SWC(StatesGroup):
    pair = State()


class Buy_SWC(StatesGroup):
    buy_count = State()
    username = State()


def main_buttons():
    keyboard = types.ReplyKeyboardMarkup()
    keyboard.resize_keyboard = True
    buttons = ['–ü—Ä–æ–¥–∞—Ç—å SWC',
               '–ü–æ—á–µ–º—É –≤–∞–º —Å—Ç–æ–∏—Ç –Ω–∞–º –¥–æ–≤–µ—Ä—è—Ç—å']
    keyboard.add(*buttons)
    return keyboard


def sell_buttons():
    keyboard = types.ReplyKeyboardMarkup()
    keyboard.resize_keyboard = True
    buttons = ['–ü—Ä–æ–¥–∞—Ç—å SWC –≤ USDT', '–ü—Ä–æ–¥–∞—Ç—å SWC –≤ UAH', '–ü—Ä–æ–¥–∞—Ç—å SWC –≤ RUB', '–ù–∞–∑–∞–¥']
    keyboard.add(*buttons)
    return keyboard


@dp.message_handler(Text(equals='/start'))
async def start(msg: types.Message):
    await msg.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n\n–í—ã –∑–∞—à–ª–∏ –Ω–∞ –Ω–∞–¥–µ–∂–Ω—ã–π –æ–±–º–µ–Ω–Ω–∏–∫ SWC-USDT!\n\n–ó–¥–µ—Å—å –≤—ã —Å–º–æ–∂–µ—Ç–µ –ª–µ–≥–∫–æ –ø—Ä–æ–¥–∞—Ç—å —Å–≤–æ–∏ SWC –∫–æ–∏–Ω—ã "
                     "–ø–æ –≤—ã–≥–æ–¥–Ω–æ–º—É –∫—É—Ä—Å—É")
    await msg.answer("–í —Å–ª—É—á–∞–µ –æ—à–∏–±–æ–∫ –Ω–∞–ø–∏—à–∏—Ç–µ /start")
    await msg.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=main_buttons())


@dp.message_handler(Text(equals='–ü—Ä–æ–¥–∞—Ç—å SWC'))
async def sell_swc(msg: types.Message):
    await msg.answer('–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä—É –æ–±–º–µ–Ω–∞: ', reply_markup=sell_buttons())
    await Sell_SWC.pair.set()


@dp.message_handler(state=Sell_SWC.pair)
async def set_pair(msg: types.Message, state: FSMContext):
    if msg.text in ['–ü—Ä–æ–¥–∞—Ç—å SWC –≤ USDT', '–ü—Ä–æ–¥–∞—Ç—å SWC –≤ UAH', '–ü—Ä–æ–¥–∞—Ç—å SWC –≤ RUB', '–ù–∞–∑–∞–¥']:
        await state.finish()
        if msg.text == '–ù–∞–∑–∞–¥':
            await msg.answer('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=main_buttons())
        if msg.text == '–ü—Ä–æ–¥–∞—Ç—å SWC –≤ USDT':
            await msg.answer(f'–¢–µ–∫—É—â–∏–π –∫—É—Ä—Å –≤ USDT: 1 SWC = 0.20 $')
            await msg.answer('–í—ã –¥–æ–ª–∂–Ω—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª—é–±–æ–µ –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ swc –æ—Ç 5 –¢–æ–∫–µ–Ω–æ–≤ –∞ —Ç–∞–∫–∂–µ –≤ –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–∞–ø–∏—Å–∞—Ç—å –≤–∞—à—É –∫–∞—Ä—Ç—É –¥–ª—è –æ–ø–ª–∞—Ç—ã –æ–±–º–µ–Ω–∞')
            await msg.answer('–ü–æ—Å–ª–µ –æ–±–º–µ–Ω–∞ SWC –æ–ø–ª–∞—Ç–∞ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ –±–ª–∏–∂–∞–π—à–∏—Ö 12 —á–∞—Å–æ–≤', reply_markup=main_buttons())
        if msg.text == '–ü—Ä–æ–¥–∞—Ç—å SWC –≤ UAH':
            await msg.answer(f'–¢–µ–∫—É—â–∏–π –∫—É—Ä—Å –≤ USDT: 1 SWC = 7.5 UAH')
            await msg.answer('–í—ã –¥–æ–ª–∂–Ω—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª—é–±–æ–µ –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ swc –æ—Ç 5 –¢–æ–∫–µ–Ω–æ–≤ –∞ —Ç–∞–∫–∂–µ –≤ –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–∞–ø–∏—Å–∞—Ç—å –≤–∞—à—É –∫–∞—Ä—Ç—É –¥–ª—è –æ–ø–ª–∞—Ç—ã –æ–±–º–µ–Ω–∞')
            await msg.answer('–ü–æ—Å–ª–µ –æ–±–º–µ–Ω–∞ SWC –æ–ø–ª–∞—Ç–∞ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ –±–ª–∏–∂–∞–π—à–∏—Ö 12 —á–∞—Å–æ–≤', reply_markup=main_buttons())
        if msg.text == '–ü—Ä–æ–¥–∞—Ç—å SWC –≤ RUB':
            await msg.answer(f'–¢–µ–∫—É—â–∏–π –∫—É—Ä—Å –≤ USDT: 1 SWC = 17 RUB')
            await msg.answer('–í—ã –¥–æ–ª–∂–Ω—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª—é–±–æ–µ –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ swc –æ—Ç 5 –¢–æ–∫–µ–Ω–æ–≤ –∞ —Ç–∞–∫–∂–µ –≤ –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–∞–ø–∏—Å–∞—Ç—å –≤–∞—à—É –∫–∞—Ä—Ç—É –¥–ª—è –æ–ø–ª–∞—Ç—ã –æ–±–º–µ–Ω–∞')
            await msg.answer('–ü–æ—Å–ª–µ –æ–±–º–µ–Ω–∞ SWC –æ–ø–ª–∞—Ç–∞ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ –±–ª–∏–∂–∞–π—à–∏—Ö 12 —á–∞—Å–æ–≤', reply_markup=main_buttons())

@dp.message_handler(Text(equals='–ü–æ—á–µ–º—É –≤–∞–º —Å—Ç–æ–∏—Ç –Ω–∞–º –¥–æ–≤–µ—Ä—è—Ç—å'))
async def why(msg: types.Message):
    await msg.answer('–ú—ã —è–≤–ª—è–µ–º—Å—è —á–µ—Å—Ç–Ω—ã–º –æ–±–º–µ–Ω–Ω–∏–∫–æ–º –º–æ–Ω–µ—Ç –Ω–∞ –≤–∞–ª—é—Ç—É.\n–ù–∞–º –Ω–µ—Ç—É —Å–º—ã—Å–ª–∞ –æ–±–º–∞–Ω–∏–≤–∞—Ç—å –ø—Ä–æ–¥–∞–≤—Ü–æ–≤ —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ –æ—Å–∫–≤–µ—Ä–Ω–∏—Ç –Ω–∞—à –æ–±–º–µ–Ω–Ω–∏–∫')

async def channel(msg: types.Message):
    inline_btn_1 = types.InlineKeyboardButton('–ö–∞–Ω–∞–ª', url="https://t.me/luter_news")
    inline_kb1 = types.InlineKeyboardMarkup().add(inline_btn_1)
    await msg.answer("–ù–∞—à –∫–∞–Ω–∞–ª —Å –Ω–æ–≤–æ—Å—Ç—è–º–∏ –∏ –∫–æ–Ω–∫—É—Ä—Å–∞–º–∏üëá", reply_markup=inline_kb1)


if __name__ == '__main__':
    executor.start_polling(dp)
